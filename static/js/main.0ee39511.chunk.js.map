{"version":3,"sources":["components/Layout/Layout.js","components/Section/Section.js","components/Notification/Notification.js","components/Statistic/Statistic.js","components/Statistics/Statistics.js","components/FeedbackOptions/FeedbackOptions.js","components/App.js","index.js"],"names":["Container","styled","div","Title","h1","Layout","children","FeedbackSection","section","h2","Section","title","Text","p","Notification","message","Stats","span","Statistic","label","value","Statistics","good","neutral","bad","total","positivePercentage","Button","button","BUTTON_TYPE","FeedbackOptions","onLeaveFeedback","type","onClick","INITIAL_STATE","App","state","countTotalFeedback","Object","values","reduce","acc","countPositiveFeedbackPercentage","percentage","isNaN","toFixed","Number","increment","setState","prevState","this","positivePercent","Component","ReactDOM","render","document","querySelector"],"mappings":"omBAGA,IAAMA,EAAYC,IAAOC,IAAV,KAKTC,EAAQF,IAAOG,GAAV,KAeIC,EAPA,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACb,kBAACN,EAAD,KACE,kBAACG,EAAD,iBACCG,I,yPCfL,IAAMC,EAAkBN,IAAOO,QAAV,KAIfL,EAAQF,IAAOQ,GAAV,KAoBIC,MAdf,YAAuC,IAApBC,EAAmB,EAAnBA,MAAOL,EAAY,EAAZA,SACxB,OACE,kBAACC,EAAD,KACE,kBAAC,EAAD,KAAQI,GACPL,I,mHCdP,IAAMM,EAAOX,IAAOY,EAAV,KAaKC,MARf,YAAoC,IAAZC,EAAW,EAAXA,QACtB,OAAO,kBAACH,EAAD,KAAOG,I,mNCNhB,IAAMC,EAAQf,IAAOgB,KAAV,KAwBIC,MAbf,YAAsC,IAAjBC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,MAC1B,OACE,kBAACJ,EAAD,KACGG,EADH,KACYC,ICiBDC,MA9Bf,YAAwE,IAAlDC,EAAiD,EAAjDA,KAAMC,EAA2C,EAA3CA,QAASC,EAAkC,EAAlCA,IAAKC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,mBAC/C,OACE,oCACGD,GAAS,EACR,kBAAC,EAAD,CAAcV,QAAQ,sBAEtB,oCACG,IACD,kBAAC,EAAD,CAAWI,MAAM,OAAOC,MAAOE,IAC/B,kBAAC,EAAD,CAAWH,MAAM,UAAUC,MAAOG,IAClC,kBAAC,EAAD,CAAWJ,MAAM,MAAMC,MAAOI,IAC9B,kBAAC,EAAD,CAAWL,MAAM,QAAQC,MAAOK,IAChC,kBAAC,EAAD,CACEN,MAAM,oBACNC,MAAK,UAAKM,EAAL,U,kaCfjB,IAAMC,EAAS1B,IAAO2B,OAAV,KAqBNC,EACE,OADFA,EAEK,UAFLA,EAGC,MAwBQC,MArBf,YAA+C,IAApBC,EAAmB,EAAnBA,gBACjBT,EAAuBO,EAAjBN,EAAiBM,EAARL,EAAQK,EAC/B,OACE,oCACE,kBAACF,EAAD,CAAQK,KAAK,SAASC,QAAS,kBAAMF,EAAgBT,KAArD,QAGA,kBAACK,EAAD,CAAQK,KAAK,SAASC,QAAS,kBAAMF,EAAgBR,KAArD,WAGA,kBAACI,EAAD,CAAQK,KAAK,SAASC,QAAS,kBAAMF,EAAgBP,KAArD,SCjCAU,G,YAAgB,CACpBZ,KAAM,EACNC,QAAS,EACTC,IAAK,IAoDQW,E,2MAhDbC,M,eACKF,G,EAGLG,mBAAqB,WACnB,OAAOC,OAAOC,OAAO,EAAKH,OAAOI,QAAO,SAACC,EAAKrB,GAAN,OAAgBqB,EAAMrB,IAAO,I,EAGvEsB,gCAAkC,SAACjB,EAAOH,GACxC,IAAIqB,EAAqB,IAAPrB,EAAcG,EAC5BmB,MAAMD,KACRA,EAAa,GAEf,IAAMvB,EAAQuB,EAAWE,UACzB,OAAOC,OAAO1B,I,EAGhB2B,UAAY,SAAAf,GACV,EAAKgB,UAAS,SAAAC,GACZ,OAAO,eAAGjB,EAAOiB,EAAUjB,GAAQ,O,wEAI7B,IAAD,EACwBkB,KAAKd,MAA5Bd,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IAEjBC,EAAQyB,KAAKb,qBACbc,EAAkBD,KAAKR,gCAAgCjB,EAAOH,GAEpE,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,CAASX,MAAM,yBACb,kBAAC,EAAD,CAAiBoB,gBAAiBmB,KAAKH,aAEzC,kBAAC,EAAD,CAASpC,MAAM,cACb,kBAAC,EAAD,CACEW,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoByB,U,GAzCdC,aCVlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,cAAc,Y","file":"static/js/main.0ee39511.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n  margin: 8rem;\r\n  max-width: 80rem;\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  display: inline-block;\r\n  width: 0.01rem;\r\n  height: 00.1rem;\r\n  opacity: 0;\r\n  font-size: 0.01rem;\r\n`;\r\n\r\nconst Layout = ({ children }) => (\r\n  <Container>\r\n    <Title>Feedback</Title>\r\n    {children}\r\n  </Container>\r\n);\r\n\r\nexport default Layout;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst FeedbackSection = styled.section`\r\n  margin-bottom: 5rem;\r\n`;\r\n\r\nconst Title = styled.h2`\r\n  font-family: var(--secondary-font);\r\n  font-size: 4rem;\r\n  margin-bottom: 3rem;\r\n`;\r\n\r\nfunction Section({ title, children }) {\r\n  return (\r\n    <FeedbackSection>\r\n      <Title>{title}</Title>\r\n      {children}\r\n    </FeedbackSection>\r\n  );\r\n}\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.object,\r\n};\r\n\r\nexport default Section;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Text = styled.p`\r\n  margin-left: 3rem;\r\n  font-size: 2.4rem;\r\n`;\r\n\r\nfunction Notification({ message }) {\r\n  return <Text>{message}</Text>;\r\n}\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Notification;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Stats = styled.span`\r\n  display: block;\r\n  margin-left: 3rem;\r\n  font-size: 2.4rem;\r\n  margin-bottom: 1rem;\r\n\r\n  &:last-of-type {\r\n    margin-bottom: none;\r\n  }\r\n`;\r\n\r\nfunction Statistic({ label, value }) {\r\n  return (\r\n    <Stats>\r\n      {label}: {value}\r\n    </Stats>\r\n  );\r\n}\r\n\r\nStatistic.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  value: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n};\r\n\r\nexport default Statistic;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Notification from '../Notification';\r\nimport Statistic from '../Statistic';\r\n\r\nfunction Statistics({ good, neutral, bad, total, positivePercentage }) {\r\n  return (\r\n    <>\r\n      {total <= 0 ? (\r\n        <Notification message=\"No feedback given\" />\r\n      ) : (\r\n        <>\r\n          {' '}\r\n          <Statistic label=\"Good\" value={good} />\r\n          <Statistic label=\"Neutral\" value={neutral} />\r\n          <Statistic label=\"Bad\" value={bad} />\r\n          <Statistic label=\"Total\" value={total} />\r\n          <Statistic\r\n            label=\"Positive feedback\"\r\n            value={`${positivePercentage}%`}\r\n          />\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Button = styled.button`\r\n  font-size: 2rem;\r\n  padding: 1rem;\r\n  border-radius: 2rem;\r\n  margin-left: 2rem;\r\n  background-color: snow;\r\n\r\n  &:hover,\r\n  &:focus {\r\n    background-color: #40c965;\r\n    color: snow;\r\n    border-color: #7a7a7a;\r\n    box-shadow: 0px 0px 10px 0px rgba(0, 0, 0, 0.75);\r\n    outline: none;\r\n  }\r\n\r\n  &:active {\r\n    background-color: green;\r\n  }\r\n`;\r\n\r\nconst BUTTON_TYPE = {\r\n  good: 'good',\r\n  neutral: 'neutral',\r\n  bad: 'bad',\r\n};\r\n\r\nfunction FeedbackOptions({ onLeaveFeedback }) {\r\n  const { good, neutral, bad } = BUTTON_TYPE;\r\n  return (\r\n    <>\r\n      <Button type=\"button\" onClick={() => onLeaveFeedback(good)}>\r\n        Good\r\n      </Button>\r\n      <Button type=\"button\" onClick={() => onLeaveFeedback(neutral)}>\r\n        Neutral\r\n      </Button>\r\n      <Button type=\"button\" onClick={() => onLeaveFeedback(bad)}>\r\n        Bad\r\n      </Button>\r\n    </>\r\n  );\r\n}\r\n\r\nFeedbackOptions.propTypes = {\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import React, { Component } from 'react';\nimport Layout from './Layout';\nimport Section from './Section';\nimport Statistics from './Statistics';\nimport FeedbackOptions from './FeedbackOptions';\nimport '../css/fonts.css';\nimport '../css/base.css';\n\nconst INITIAL_STATE = {\n  good: 0,\n  neutral: 0,\n  bad: 0,\n};\n\nclass App extends Component {\n  state = {\n    ...INITIAL_STATE,\n  };\n\n  countTotalFeedback = () => {\n    return Object.values(this.state).reduce((acc, value) => acc + value, 0);\n  };\n\n  countPositiveFeedbackPercentage = (total, good) => {\n    let percentage = (good * 100) / total;\n    if (isNaN(percentage)) {\n      percentage = 0;\n    }\n    const value = percentage.toFixed();\n    return Number(value);\n  };\n\n  increment = type => {\n    this.setState(prevState => {\n      return { [type]: prevState[type] + 1 };\n    });\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n\n    const total = this.countTotalFeedback();\n    const positivePercent = this.countPositiveFeedbackPercentage(total, good);\n\n    return (\n      <Layout>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions onLeaveFeedback={this.increment} />\n        </Section>\n        <Section title=\"Statistics\">\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={total}\n            positivePercentage={positivePercent}\n          />\n        </Section>\n      </Layout>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.querySelector('#root'));\n"],"sourceRoot":""}