{"version":3,"sources":["components/Layout/Layout.js","components/Feedback/Feedback.js","components/Notification/Notification.js","components/Statistic/Statistic.js","components/Statistics/Statistics.js","components/App.js","index.js"],"names":["Container","styled","div","Layout","children","Section","section","Title","h1","Button","button","BUTTON_TYPE","Feedback","cb","good","neutral","bad","type","onClick","Text","p","Notification","message","Stats","span","Statistic","label","value","h2","Statistics","total","positivePercentage","INITIAL_STATE","App","state","countTotalFeedback","Object","values","reduce","acc","countPositiveFeedbackPercentage","percentage","isNaN","toFixed","Number","increment","setState","prevState","this","positivePercent","Component","ReactDOM","render","document","querySelector"],"mappings":"iaAGA,IAAMA,EAAYC,IAAOC,IAAV,KAMAC,EAFA,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OAAkB,kBAACJ,EAAD,KAAYI,I,2pBCH7C,IAAMC,EAAUJ,IAAOK,QAAV,KAIPC,EAAQN,IAAOO,GAAV,KAMLC,EAASR,IAAOS,OAAV,KAqBNC,EACE,OADFA,EAEK,UAFLA,EAGC,MAyBQC,MAtBf,YAA2B,IAAPC,EAAM,EAANA,GACVC,EAAuBH,EAAjBI,EAAiBJ,EAARK,EAAQL,EAC/B,OACE,kBAACN,EAAD,KACE,kBAACE,EAAD,8BACA,kBAACE,EAAD,CAAQQ,KAAK,SAASC,QAAS,kBAAML,EAAGC,KAAxC,QAGA,kBAACL,EAAD,CAAQQ,KAAK,SAASC,QAAS,kBAAML,EAAGE,KAAxC,WAGA,kBAACN,EAAD,CAAQQ,KAAK,SAASC,QAAS,kBAAML,EAAGG,KAAxC,S,mHChDN,IAAMG,EAAOlB,IAAOmB,EAAV,KAaKC,MARf,YAAoC,IAAZC,EAAW,EAAXA,QACtB,OAAO,kBAACH,EAAD,KAAOG,I,gMCNhB,IAAMC,EAAQtB,IAAOuB,KAAV,KAuBIC,MAbf,YAAsC,IAAjBC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,MAC1B,OACE,kBAACJ,EAAD,KACGG,EADH,KACYC,I,sSCXhB,IAAMtB,EAAUJ,IAAOK,QAAV,KAMPC,EAAQN,IAAO2B,GAAV,KAqCIC,MA/Bf,YAAwE,IAAlDf,EAAiD,EAAjDA,KAAMC,EAA2C,EAA3CA,QAASC,EAAkC,EAAlCA,IAAKc,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,mBAC/C,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,mBACCD,GAAS,EACR,kBAAC,EAAD,CAAcR,QAAQ,sBAEtB,oCACG,IACD,kBAAC,EAAD,CAAWI,MAAM,OAAOC,MAAOb,IAC/B,kBAAC,EAAD,CAAWY,MAAM,UAAUC,MAAOZ,IAClC,kBAAC,EAAD,CAAWW,MAAM,MAAMC,MAAOX,IAC9B,kBAAC,EAAD,CAAWU,MAAM,QAAQC,MAAOG,IAChC,kBAAC,EAAD,CACEJ,MAAM,oBACNC,MAAK,UAAKI,EAAL,UC1BXC,G,YAAgB,CACpBlB,KAAM,EACNC,QAAS,EACTC,IAAK,IAgDQiB,E,2MA5CbC,M,eACKF,G,EAGLG,mBAAqB,WACnB,OAAOC,OAAOC,OAAO,EAAKH,OAAOI,QAAO,SAACC,EAAKZ,GAAN,OAAgBY,EAAMZ,IAAO,I,EAGvEa,gCAAkC,SAACV,EAAOhB,GACxC,IAAI2B,EAAqB,IAAP3B,EAAcgB,EAC5BY,MAAMD,KACRA,EAAa,GAEf,IAAMd,EAAQc,EAAWE,UACzB,OAAOC,OAAOjB,I,EAGhBkB,UAAY,SAAA5B,GACV,EAAK6B,UAAS,SAAAC,GACZ,OAAO,eAAG9B,EAAO8B,EAAU9B,GAAQ,O,wEAI7B,IAAD,EACwB+B,KAAKd,MAA5BpB,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IAEjBc,EAAQkB,KAAKb,qBACbc,EAAkBD,KAAKR,gCAAgCV,EAAOhB,GAEpE,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,CAAUD,GAAImC,KAAKH,YACnB,kBAAC,EAAD,CACE/B,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLc,MAAOA,EACPC,mBAAoBkB,S,GAtCZC,aCTlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,cAAc,Y","file":"static/js/main.1547998e.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n  margin: 8rem;\r\n`;\r\n\r\nconst Layout = ({ children }) => <Container>{children}</Container>;\r\n\r\nexport default Layout;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Section = styled.section`\r\n  margin-bottom: 5rem;\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  font-family: var(--secondary-font);\r\n  font-size: 4rem;\r\n  margin-bottom: 3rem;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  font-size: 2rem;\r\n  padding: 1rem;\r\n  border-radius: 2rem;\r\n  margin-left: 2rem;\r\n  background-color: snow;\r\n\r\n  &:hover,\r\n  &:focus {\r\n    background-color: #40c965;\r\n    color: snow;\r\n    border-color: #7a7a7a;\r\n    box-shadow: 0px 0px 10px 0px rgba(0, 0, 0, 0.75);\r\n    outline: none;\r\n  }\r\n\r\n  &:active {\r\n    background-color: green;\r\n  }\r\n`;\r\n\r\nconst BUTTON_TYPE = {\r\n  good: 'good',\r\n  neutral: 'neutral',\r\n  bad: 'bad',\r\n};\r\n\r\nfunction Feedback({ cb }) {\r\n  const { good, neutral, bad } = BUTTON_TYPE;\r\n  return (\r\n    <Section>\r\n      <Title>Please leave feedback</Title>\r\n      <Button type=\"button\" onClick={() => cb(good)}>\r\n        Good\r\n      </Button>\r\n      <Button type=\"button\" onClick={() => cb(neutral)}>\r\n        Neutral\r\n      </Button>\r\n      <Button type=\"button\" onClick={() => cb(bad)}>\r\n        Bad\r\n      </Button>\r\n    </Section>\r\n  );\r\n}\r\n\r\nFeedback.propTypes = {\r\n  cb: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Feedback;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Text = styled.p`\r\n  margin-left: 3rem;\r\n  font-size: 2.4rem;\r\n`;\r\n\r\nfunction Notification({ message }) {\r\n  return <Text>{message}</Text>;\r\n}\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Notification;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Stats = styled.span`\r\n  margin-left: 3rem;\r\n  font-size: 2.4rem;\r\n  margin-bottom: 1rem;\r\n\r\n  &:last-of-type {\r\n    margin-bottom: none;\r\n  }\r\n`;\r\n\r\nfunction Statistic({ label, value }) {\r\n  return (\r\n    <Stats>\r\n      {label}: {value}\r\n    </Stats>\r\n  );\r\n}\r\n\r\nStatistic.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  value: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n};\r\n\r\nexport default Statistic;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\nimport Notification from '../Notification';\r\nimport Statistic from '../Statistic';\r\n\r\nconst Section = styled.section`\r\n  margin-bottom: 5rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst Title = styled.h2`\r\n  font-family: var(--secondary-font);\r\n  font-size: 4rem;\r\n  margin-bottom: 3rem;\r\n`;\r\n\r\nfunction Statistics({ good, neutral, bad, total, positivePercentage }) {\r\n  return (\r\n    <Section>\r\n      <Title>Statistics</Title>\r\n      {total <= 0 ? (\r\n        <Notification message=\"No feedback given\" />\r\n      ) : (\r\n        <>\r\n          {' '}\r\n          <Statistic label=\"Good\" value={good} />\r\n          <Statistic label=\"Neutral\" value={neutral} />\r\n          <Statistic label=\"Bad\" value={bad} />\r\n          <Statistic label=\"Total\" value={total} />\r\n          <Statistic\r\n            label=\"Positive feedback\"\r\n            value={`${positivePercentage}%`}\r\n          />\r\n        </>\r\n      )}\r\n    </Section>\r\n  );\r\n}\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import React, { Component } from 'react';\nimport Layout from './Layout';\nimport Feedback from './Feedback';\nimport Statistics from './Statistics';\nimport '../css/fonts.css';\nimport '../css/base.css';\n\nconst INITIAL_STATE = {\n  good: 0,\n  neutral: 0,\n  bad: 0,\n};\n\nclass App extends Component {\n  state = {\n    ...INITIAL_STATE,\n  };\n\n  countTotalFeedback = () => {\n    return Object.values(this.state).reduce((acc, value) => acc + value, 0);\n  };\n\n  countPositiveFeedbackPercentage = (total, good) => {\n    let percentage = (good * 100) / total;\n    if (isNaN(percentage)) {\n      percentage = 0;\n    }\n    const value = percentage.toFixed();\n    return Number(value);\n  };\n\n  increment = type => {\n    this.setState(prevState => {\n      return { [type]: prevState[type] + 1 };\n    });\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n\n    const total = this.countTotalFeedback();\n    const positivePercent = this.countPositiveFeedbackPercentage(total, good);\n\n    return (\n      <Layout>\n        <Feedback cb={this.increment} />\n        <Statistics\n          good={good}\n          neutral={neutral}\n          bad={bad}\n          total={total}\n          positivePercentage={positivePercent}\n        />\n      </Layout>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.querySelector('#root'));\n"],"sourceRoot":""}